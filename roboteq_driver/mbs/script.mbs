SCRIPT_VER=7

MAX_CHANNELS=2 ' Two channels
Dim last_mode[2] as Integer

' Mode values are:
'  -1 stopped
'  0 speed mode
'  1 position mode
' These correspond to the constants in roboteq_msgs/Command. The motor begins in stopped
' mode, the setup for which is run when last_mode[0] != VAR[1].
last_mode[0] = -127
setcommand(_VAR, 1, -1)

' Motor controller configuration. Much of this is particular to Grizzly
' and can be generalized/parameterized as the need arises. Page numbers
' are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/	7-nextgen-controllers-user-manual/file

setconfig(_ECHOF, 1) ' Serial echo off (p195)
setconfig(_RWD, 110) ' Watchdog timeout, milliseconds (p195)
setconfig(_AMOD, 1, 1) ' Analog input 1 absolute mode
setconfig(_AMOD, 2, 1) ' Analog input 2 absolute mode

for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
	' Encoder, speed config (p208, p221)
	setconfig(_BLFB, ch, 1) ' Select Hall sensor feedback
	setconfig(_BPOL, ch, 4) ' Set number of poles
	setconfig(_MDIR, ch, 0) ' Set direction to direct
	setconfig(_BMOD, ch, 0) ' Set Switching mode to Trapezoidal
	setconfig(_MXRPM, ch, 3000) ' Maximal Rotation
	setconfig(_CLERD, ch, 0) ' Closed Loop error detection

	' Max acceleration/deceleration (p219)
	setconfig(_MAC, ch, 17500) ' Motor(s) Desired Acceleration
	setconfig(_MDEC, ch, 17500) ' Motor(s) Desired Deceleration

	' PID Config and Closed velocity control loop
	setconfig(_MMOD, ch, 1)
	setconfig(_ICAP, ch, 100)

	' Current limit (p216)
	setconfig(_ALIM, ch, 300) ' Motor Amps Limit (30A)
	setconfig(_ATGA, ch, 1) ' Amps Trigger Action (Safety Stop)
	setconfig(_ATGD, ch, 500) ' Amps Trigger Delay (0.5s)
	setconfig(_ATRIG, ch, 110) ' Amps Trigger Value (11A)
next

' Undervoltage/overvoltage limits (p214)
setconfig(_OVL, 400) ' 22V to 26V
setconfig(_UVL, 150) 

top:
	for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
		' Send feedback for this channel at 25Hz.
		GoSub PrintFeedback
	next

	' Send status messages for the controller at 5Hz.
	c++
	if c = 10 then
		GoSub PrintStatus
		c = 0
	end if

	wait(9)
	goto top

PrintFeedback:
	print("&f:", ch)
	print(":", getvalue(_MOTCMD, ch))
	print(":", getvalue(_MOTPWR, ch))
	print(":", getvalue(_BLSPEED, ch))
	print(":", getvalue(_BLCNTR, ch))
	print("\r")
	Return
	
PrintStatus:
	print("&s:", SCRIPT_VER)
	print(":", getvalue(_FLTFLAG))
	print(":", getvalue(_STFLAG))
	print(":", getvalue(_VOLTS, 2))
	print(":", getvalue(_TEMP, 1))
	print(":", getconfig(_MXRPM, 1))
	print(":", getconfig(_MXRPM, 2))
	print(":", getvalue(_BATAMPS, 1))
	print(":", getvalue(_BATAMPS, 2))
	print("\r")
	Return
